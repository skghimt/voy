<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.wondervoy.dao.wondervoy.IUserFindPasswordDAO">
<!--
insert
update
updateNull
deleteById
deleteByCondition
deleteByProperty
fetch
findOne
findList
findAll
queryPage
like
queryList
queryOne
count
selectMaxId
updateOrSave
selectOne
selectList
-->
    <sql id="Base_Column_List">
        id,
        state,
        createDate,
        invalidDate,
        email,
        code,
        updateDate
    </sql>
    <insert id="insert" parameterType="UserFindPassword">
        INSERT INTO user_user_find_password (
        state,
        createDate,
        invalidDate,
        email,
        code,
        updateDate
        ) VALUES (
        #{state},
        #{createDate},
        #{invalidDate},
        #{email},
        #{code},
        #{updateDate}
        )
        <selectKey resultType="java.lang.Long" keyProperty="id">
        SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="UserFindPassword">
        UPDATE user_user_find_password
        <trim prefix="SET" suffixOverrides=",">
            <if test="state!=null">
                state = #{state},
            </if>
            <if test="createDate!=null">
                createDate = #{createDate},
            </if>
            <if test="invalidDate!=null">
                invalidDate = #{invalidDate},
            </if>
            <if test="email!=null">
                email = #{email},
            </if>
            <if test="code!=null">
                code = #{code},
            </if>
            <if test="updateDate!=null">
                updateDate = #{updateDate},
            </if>
        </trim>
        WHERE
        id = #{id}
    </update>

    <update id="updateMap">
        UPDATE user_user_find_password
        <trim prefix="SET" suffixOverrides=",">
            <if test="map.createDate!=null">
                createDate = #{map.createDate},
            </if>
            <if test="map.state!=null">
                state = #{map.state},
            </if>
            <if test="map.invalidDate!=null">
                invalidDate = #{map.invalidDate},
            </if>
            <if test="map.code!=null">
                code = #{map.code},
            </if>
            <if test="map.updateDate!=null">
                updateDate = #{map.updateDate},
            </if>
        </trim>
        WHERE
        email = #{map.email} and state = 'N'
    </update>

    <update id="updateByCondition">
        UPDATE user_user_find_password
        <trim prefix="SET" suffixOverrides=",">
            <if test="update.createDate!=null">
                createDate = #{update.createDate},
            </if>
            <if test="update.invalidDate!=null">
                invalidDate = #{update.invalidDate},
            </if>
            <if test="update.email!=null">
                email = #{update.email},
            </if>
            <if test="update.code!=null">
                code = #{update.code},
            </if>
            <if test="update.updateDate!=null">
                updateDate = #{update.updateDate},
            </if>
        </trim>

        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.createDate!=null">
                AND createDate = #{condition.createDate}
            </if>
            <if test="condition.invalidDate!=null">
                AND invalidDate = #{condition.invalidDate}
            </if>
            <if test="condition.email!=null">
                AND email = #{condition.email}
            </if>
            <if test="condition.code!=null">
                AND code = #{condition.code}
            </if>
            <if test="condition.updateDate!=null">
                AND updateDate = #{condition.updateDate}
            </if>
        </trim>
    </update>

    <insert id="insertMap" >
        INSERT INTO user_user_find_password (
                createDate,
                invalidDate,
                email,
                code,
                updateDate
        ) VALUES (
                    #{map.createDate},
                    #{map.invalidDate},
                    #{map.email},
                    #{map.code},
                    #{map.updateDate}
        )
    </insert>


    <update id="updateNull" parameterType="UserFindPassword">
        UPDATE user_user_find_password
        <trim prefix="SET" suffixOverrides=",">
            createDate = #{createDate},
            invalidDate = #{invalidDate},
            email = #{email},
            code = #{code},
            updateDate = #{updateDate},
        </trim>
        WHERE
        id = #{id} 
    </update>

    <!-- 按Id删除 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM user_user_find_password
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
    </delete>


    <delete id="deleteByCondition" parameterType="java.util.Map">
        DELETE FROM user_user_find_password
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id!=null">
                AND id = #{id}
            </if>
            <if test="createDate!=null">
                AND createDate = #{createDate}
            </if>
            <if test="invalidDate!=null">
                AND invalidDate = #{invalidDate}
            </if>
            <if test="email!=null">
                AND email = #{email}
            </if>
            <if test="code!=null">
                AND code = #{code}
            </if>
            <if test="updateDate!=null">
                AND updateDate = #{updateDate}
            </if>
        </trim>
    </delete>

    <delete id="deleteByProperty" parameterType="java.util.Map">
        DELETE FROM user_user_find_password WHERE
        ${property} = #{value}
    </delete>

    <select id="fetch" parameterType="java.lang.Long" resultType="UserFindPassword">
        SELECT
        <include refid="Base_Column_List" />
        FROM user_user_find_password
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
    </select>

    <select id="findOne" parameterType="java.util.Map" resultType="UserFindPassword">
        SELECT
        <include refid="Base_Column_List" />
        FROM user_user_find_password WHERE
        ${property} = #{value}
        LIMIT 0,1
    </select>

    <select id="findList" parameterType="java.util.Map" resultType="UserFindPassword">
        SELECT
        <include refid="Base_Column_List" />
        FROM user_user_find_password WHERE
        ${property} = #{value}
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="findAll" resultType="UserFindPassword">
        SELECT
        <include refid="Base_Column_List" />
        FROM user_user_find_password
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryPage" resultType="UserFindPassword">
        SELECT
        <include refid="Base_Column_List" />
        FROM user_user_find_password
        <where>

            <if test="condition.whereSql != null">
                and id in (#{condition.whereSql})
            </if>

            <if test="condition.id!=null">
                ${condition.groupOp}   id  ${condition.id.op}  #{condition.id.data}
            </if>
            <if test="condition.createDate!=null">
                ${condition.groupOp}   createDate  ${condition.createDate.op}  #{condition.createDate.data}
            </if>
            <if test="condition.invalidDate!=null">
                ${condition.groupOp}   invalidDate  ${condition.invalidDate.op}  #{condition.invalidDate.data}
            </if>
            <if test="condition.email!=null">
                ${condition.groupOp}   email  ${condition.email.op}  #{condition.email.data}
            </if>
            <if test="condition.code!=null">
                ${condition.groupOp}   code  ${condition.code.op}  #{condition.code.data}
            </if>
            <if test="condition.updateDate!=null">
                ${condition.groupOp}   updateDate  ${condition.updateDate.op}  #{condition.updateDate.data}
            </if>


    </where>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
        <if test="offset != null">
            limit ${offset}, ${rows}
        </if>
    </select>

    <select id="like" parameterType="java.util.Map" resultType="UserFindPassword">
        SELECT
        <include refid="Base_Column_List" />
        FROM user_user_find_password
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id like CONCAT('%', #{condition.id} , '%')
            </if>
            <if test="condition.createDate!=null">
                AND createDate like CONCAT('%', #{condition.createDate} , '%')
            </if>
            <if test="condition.invalidDate!=null">
                AND invalidDate like CONCAT('%', #{condition.invalidDate} , '%')
            </if>
            <if test="condition.email!=null">
                AND email like CONCAT('%', #{condition.email} , '%')
            </if>
            <if test="condition.code!=null">
                AND code like CONCAT('%', #{condition.code} , '%')
            </if>
            <if test="condition.updateDate!=null">
                AND updateDate like CONCAT('%', #{condition.updateDate} , '%')
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>


    <select id="queryList" parameterType="java.util.Map" resultType="UserFindPassword">
        SELECT
        <include refid="Base_Column_List" />
        FROM user_user_find_password
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.createDate!=null">
                AND createDate = #{condition.createDate}
            </if>
            <if test="condition.invalidDate!=null">
                AND invalidDate = #{condition.invalidDate}
            </if>
            <if test="condition.email!=null">
                AND email = #{condition.email}
            </if>
            <if test="condition.code!=null">
                AND code = #{condition.code}
            </if>
            <if test="condition.updateDate!=null">
                AND updateDate = #{condition.updateDate}
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryOne" parameterType="java.util.Map" resultType="UserFindPassword">
        SELECT
        <include refid="Base_Column_List" />
        FROM user_user_find_password
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.createDate!=null">
                AND createDate = #{condition.createDate}
            </if>
            <if test="condition.invalidDate!=null">
                AND invalidDate = #{condition.invalidDate}
            </if>
            <if test="condition.email!=null">
                AND email = #{condition.email}
            </if>
            <if test="condition.code!=null">
                AND code = #{condition.code}
            </if>
            <if test="condition.updateDate!=null">
                AND updateDate = #{condition.updateDate}
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
        limit 0,1
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT count(id) FROM user_user_find_password
       <where>
           <if test="id!=null">
               ${groupOp} id ${id.op}  #{id.data}
           </if>
           <if test="createDate!=null">
               ${groupOp} createDate ${createDate.op}  #{createDate.data}
           </if>
           <if test="invalidDate!=null">
               ${groupOp} invalidDate ${invalidDate.op}  #{invalidDate.data}
           </if>
           <if test="email!=null">
               ${groupOp} email ${email.op}  #{email.data}
           </if>
           <if test="code!=null">
               ${groupOp} code ${code.op}  #{code.data}
           </if>
           <if test="updateDate!=null">
               ${groupOp} updateDate ${updateDate.op}  #{updateDate.data}
           </if>

       </where>
    </select>

    <select id="selectMaxId" resultType="java.lang.Long">
        SELECT
        MAX(id)
        FROM user_user_find_password
    </select>

</mapper>

